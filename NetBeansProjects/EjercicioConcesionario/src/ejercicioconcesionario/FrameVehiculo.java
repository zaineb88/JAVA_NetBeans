/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejercicioconcesionario;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alumno2
 */
public class FrameVehiculo extends javax.swing.JFrame {

    ArrayList<Vehiculo> listaVehiculos = new ArrayList();
    DefaultTableModel modeloCoche;
    DefaultTableModel modeloCamion;
    
    GestorFicheros ficheros = new GestorFicheros("objetos.txt");
    Codificador codificador = new Codificador();
    /**
     * Creates new form TablaVehiculo
     */
    public FrameVehiculo() {
        initComponents();
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCamiones = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCoches = new javax.swing.JTable();
        botonCrear = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonBorrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabsMousePressed(evt);
            }
        });

        tablaCamiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCamiones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaCamionesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCamiones);

        tabs.addTab("Camiones", jScrollPane1);

        tablaCoches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCoches.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaCochesMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tablaCoches);

        tabs.addTab("Coches", jScrollPane2);

        botonCrear.setText("Nuevo vehículo");
        botonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearActionPerformed(evt);
            }
        });

        botonModificar.setText("Modificar vehículo");
        botonModificar.setEnabled(false);
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonBorrar.setText("Borrar vehículo");
        botonBorrar.setEnabled(false);
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonModificar))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(botonCrear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonBorrar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMousePressed
        
    }//GEN-LAST:event_tabsMousePressed

    private void botonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearActionPerformed
        
        
        DialogVehiculo diag = new DialogVehiculo(this, true);
        diag.setVisible(true);
        if(diag.v != null)
        {
           listaVehiculos.add(diag.v);
           ficheros.escribirFichero(
               codificador.codificar(listaVehiculos)
           );
        }
        String ficheroLeido = ficheros.leerFichero();
        ArrayList<Vehiculo> array = codificador.descodificar(ficheroLeido);
        for (Vehiculo v : array) {
            if(v instanceof Coche)
            {
               Coche c = (Coche) v;
               modeloCoche.addRow(new Object[]{c.getMarca(), c.getModelo(), c.getPrecio(), c.getKilometraje(), c.isEsSegunda()});
            }
            else if(v instanceof Camion)
            {
                Camion c = (Camion) v;
                modeloCamion.addRow(new Object[]{c.getMarca(), c.getModelo(), c.getPrecio(), c.getCarga()});
            }
        }
        actualizarTabla();
    }//GEN-LAST:event_botonCrearActionPerformed

    private void tablaCamionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCamionesMousePressed
        if(tablaCamiones.getSelectedRow() != -1)
        {
            botonModificar.setEnabled(true);
            botonBorrar.setEnabled(true);
        }
        else
        {
            botonModificar.setEnabled(false);
            botonBorrar.setEnabled(false);
        }
    }//GEN-LAST:event_tablaCamionesMousePressed

    private void tablaCochesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCochesMousePressed
        if(tablaCoches.getSelectedRow() != -1)
        {
            botonModificar.setEnabled(true);
            botonBorrar.setEnabled(true);
        }
        else
        {
            botonModificar.setEnabled(false);
            botonBorrar.setEnabled(false);
        }
    }//GEN-LAST:event_tablaCochesMousePressed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        
        Vehiculo v = null;
        if(tabs.getSelectedIndex()==0)
        {
            Camion cam = new Camion();
            cam.setMarca((String)tablaCamiones.getValueAt(tablaCamiones.getSelectedRow(), 0));
            cam.setModelo((String)tablaCamiones.getValueAt(tablaCamiones.getSelectedRow(), 1));
            cam.setPrecio((Float)tablaCamiones.getValueAt(tablaCamiones.getSelectedRow(), 2));
            cam.setCarga((Integer)tablaCamiones.getValueAt(tablaCamiones.getSelectedRow(), 3));
            v = cam;
        }
        else if(tabs.getSelectedIndex()==1)
        {
            Coche coc = new Coche();
            coc.setMarca((String)tablaCoches.getValueAt(tablaCoches.getSelectedRow(), 0));
            coc.setModelo((String)tablaCoches.getValueAt(tablaCoches.getSelectedRow(), 1));
            coc.setPrecio((Float)tablaCoches.getValueAt(tablaCoches.getSelectedRow(), 2));
            coc.setKilometraje((Integer)tablaCoches.getValueAt(tablaCoches.getSelectedRow(), 3));
            coc.setEsSegunda((Boolean)tablaCoches.getValueAt(tablaCoches.getSelectedRow(), 4));
            v = coc;
        }
        
        DialogVehiculo diag = new DialogVehiculo(this, true, v);
        diag.setVisible(true);
        if(diag.v != null){
                listaVehiculos.set(diag.v.getId(), diag.v);
                ficheros.escribirFichero(codificador.codificar(listaVehiculos));   
        }
        actualizarTabla(); 
    }//GEN-LAST:event_botonModificarActionPerformed

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
        
    }//GEN-LAST:event_botonBorrarActionPerformed

    public void actualizarTabla(){
        
        // Configuración de tablas
        modeloCoche = new DefaultTableModel();
        modeloCamion = new DefaultTableModel();
        
        modeloCoche.setColumnIdentifiers(new String[]{"Marca", "Modelo", "Precio", "Kilometraje", "Segunda mano"});
        tablaCoches.setModel(modeloCoche);
        tablaCoches.setColumnSelectionAllowed(false);
        tablaCoches.setCellSelectionEnabled(false);
        
        modeloCamion.setColumnIdentifiers(new String[]{"Marca", "Modelo", "Precio", "Carga"});
        tablaCamiones.setModel(modeloCamion);
        tablaCamiones.setColumnSelectionAllowed(false);
        tablaCamiones.setCellSelectionEnabled(false);
        
        // Darles valores
        if(ficheros.leerFichero()!=null)
        {
            ArrayList<Vehiculo> lista = codificador.descodificar(ficheros.leerFichero());

            for(Vehiculo v : lista){
                if(v instanceof Coche){
                    Coche c = (Coche)v;
                    modeloCoche.addRow(new Object[]{c.getMarca(), c.getModelo(), c.getPrecio(), c.getKilometraje(), c.isEsSegunda()});
                }else if (v instanceof Camion){
                    Camion c = (Camion)v;
                    modeloCamion.addRow(new Object[]{c.getMarca(), c.getModelo(), c.getPrecio(), c.getCarga()});
                }
            }
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameVehiculo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonCrear;
    private javax.swing.JButton botonModificar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaCamiones;
    private javax.swing.JTable tablaCoches;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
}
